local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
local Animator = Humanoid and Humanoid:FindFirstChildOfClass("Animator")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 350, 0, 300)
Frame.Position = UDim2.new(0.5, -175, 0.5, -150)
Frame.BackgroundColor3 = Color3.fromRGB(173, 216, 230)
Frame.Active = true
Frame.Draggable = true
Frame.ClipsDescendants = true

local TopBar = Instance.new("Frame", Frame)
TopBar.Size = UDim2.new(1, 0, 0, 30)
TopBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

local LogTab = Instance.new("TextButton", TopBar)
LogTab.Size = UDim2.new(0, 80, 1, 0)
LogTab.Position = UDim2.new(0, 5, 0, 0)
LogTab.Text = "Logs"
LogTab.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

local PlayTab = Instance.new("TextButton", TopBar)
PlayTab.Size = UDim2.new(0, 80, 1, 0)
PlayTab.Position = UDim2.new(0, 90, 0, 0)
PlayTab.Text = "Play"
PlayTab.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

local ClearAllButton = Instance.new("TextButton", TopBar)
ClearAllButton.Size = UDim2.new(0, 80, 1, 0)
ClearAllButton.Position = UDim2.new(0, 180, 0, 0)
ClearAllButton.Text = "Clear All"
ClearAllButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

local MinimizeButton = Instance.new("TextButton", ScreenGui)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Position = UDim2.new(0, 5, 0.5, -15)
MinimizeButton.Text = "-"
MinimizeButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)

local CloseButton = Instance.new("TextButton", TopBar)
CloseButton.Size = UDim2.new(0, 30, 1, 0)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.Text = "X"
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)

local ContentFrame = Instance.new("Frame", Frame)
ContentFrame.Size = UDim2.new(1, 0, 1, -30)
ContentFrame.Position = UDim2.new(0, 0, 0, 30)
ContentFrame.ClipsDescendants = true

local LogFrame = Instance.new("ScrollingFrame", ContentFrame)
LogFrame.Size = UDim2.new(1, 0, 1, 0)
LogFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
LogFrame.ScrollBarThickness = 5
LogFrame.Visible = true
LogFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
LogFrame.ClipsDescendants = true
LogFrame.BackgroundTransparency = 1

local UIList = Instance.new("UIListLayout", LogFrame)
UIList.SortOrder = Enum.SortOrder.LayoutOrder
UIList.Padding = UDim.new(0, 5)

local PlayFrame = Instance.new("Frame", ContentFrame)
PlayFrame.Size = UDim2.new(1, 0, 1, 0)
PlayFrame.Visible = false

local TextBox = Instance.new("TextBox", PlayFrame)
TextBox.Size = UDim2.new(1, -20, 0, 30)
TextBox.Position = UDim2.new(0, 10, 0, 10)
TextBox.PlaceholderText = "Enter Animation ID"

local PlayButton = Instance.new("TextButton", PlayFrame)
PlayButton.Size = UDim2.new(1, -20, 0, 30)
PlayButton.Position = UDim2.new(0, 10, 0, 50)
PlayButton.Text = "Play"
PlayButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

local ExcludeButton = Instance.new("TextButton", PlayFrame)
ExcludeButton.Size = UDim2.new(1, -20, 0, 30)
ExcludeButton.Position = UDim2.new(0, 10, 0, 90)
ExcludeButton.Text = "Exclude"
ExcludeButton.BackgroundColor3 = Color3.fromRGB(150, 150, 0)

local LoopToggle = Instance.new("TextButton", PlayFrame)
LoopToggle.Size = UDim2.new(1, -20, 0, 30)
LoopToggle.Position = UDim2.new(0, 10, 0, 130)
LoopToggle.Text = "Loop: OFF"
LoopToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
local isLooping = false

local FreezeToggle = Instance.new("TextButton", PlayFrame)
FreezeToggle.Size = UDim2.new(1, -20, 0, 30)
FreezeToggle.Position = UDim2.new(0, 10, 0, 170)
FreezeToggle.Text = "Freeze: OFF"
FreezeToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
local isFrozen = false
local frozenTime = 0

local StopButton = Instance.new("TextButton", PlayFrame)
StopButton.Size = UDim2.new(1, -20, 0, 30)
StopButton.Position = UDim2.new(0, 10, 0, 210)
StopButton.Text = "Stop Animation"
StopButton.BackgroundColor3 = Color3.fromRGB(150, 50, 50)

LogTab.MouseButton1Click:Connect(function()
    LogFrame.Visible = true
    PlayFrame.Visible = false
end)

PlayTab.MouseButton1Click:Connect(function()
    LogFrame.Visible = false
    PlayFrame.Visible = true
end)

local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        LogTab.Visible = false
        PlayTab.Visible = false
        Frame.Visible = false
    else
        LogTab.Visible = true
        PlayTab.Visible = true
        Frame.Visible = true
    end
    MinimizeButton.Text = isMinimized and "+" or "-"
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Excluded Animation IDs
local excludedAnimations = {}

-- Function to check if animation should be excluded
local function isExcluded(animId)
    return excludedAnimations[animId] ~= nil
end

-- Function to exclude an animation
local function excludeAnimation(animId)
    excludedAnimations[animId] = true
end

-- Clear All button functionality
ClearAllButton.MouseButton1Click:Connect(function()
    for _, child in pairs(LogFrame:GetChildren()) do
        if child:IsA("Frame") then
            child:Destroy() -- Remove all logged animations
        end
    end
    LogFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Reset the canvas size after clearing
end)

-- Log Animation function with exclusion logic
local function logAnimation(animId)
    if isExcluded(animId) then
        return
    end

    local formattedId = "rbxassetid://" .. animId:match("%d+")

    for _, child in pairs(LogFrame:GetChildren()) do
        if child:IsA("TextLabel") and child.Text == formattedId then
            return
        end
    end

    local AnimRow = Instance.new("Frame", LogFrame)
    AnimRow.Size = UDim2.new(1, 0, 0, 30)
    AnimRow.BackgroundTransparency = 1

    local Label = Instance.new("TextLabel", AnimRow)
    Label.Size = UDim2.new(0.7, 0, 1, 0)
    Label.Text = formattedId
    Label.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Label.TextColor3 = Color3.new(1, 1, 1)

    local CopyButton = Instance.new("TextButton", AnimRow)
    CopyButton.Size = UDim2.new(0.3, 0, 1, 0)
    CopyButton.Position = UDim2.new(0.7, 0, 0, 0)
    CopyButton.Text = "Copy"
    CopyButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    CopyButton.MouseButton1Click:Connect(function()
        setclipboard(formattedId)
    end)

    LogFrame.CanvasSize = UDim2.new(0, 0, 0, UIList.AbsoluteContentSize.Y)
end

if Animator then
    Animator.AnimationPlayed:Connect(function(track)
        if track and track.Animation then
            logAnimation(track.Animation.AnimationId)
        end
    end)
end

local currentTrack
PlayButton.MouseButton1Click:Connect(function()
    local animId = TextBox.Text:match("%d+")
    if animId then
        local animation = Instance.new("Animation")
        animation.AnimationId = "rbxassetid://" .. animId

        currentTrack = Animator:LoadAnimation(animation)
        currentTrack.Looped = isLooping
        currentTrack:Play()
    end
end)

ExcludeButton.MouseButton1Click:Connect(function()
    local animId = TextBox.Text:match("%d+")
    if animId then
        excludeAnimation("rbxassetid://" .. animId)
    end
end)

LoopToggle.MouseButton1Click:Connect(function()
    isLooping = not isLooping
    LoopToggle.Text = "Loop: " .. (isLooping and "ON" or "OFF")
end)

FreezeToggle.MouseButton1Click:Connect(function()
    isFrozen = not isFrozen
    FreezeToggle.Text = "Freeze: " .. (isFrozen and "ON" or "OFF")
    
    if isFrozen then
        frozenTime = currentTrack.TimePosition
        currentTrack:Stop()
    else
        currentTrack:Play()
        currentTrack.TimePosition = frozenTime
    end
end)

StopButton.MouseButton1Click:Connect(function()
    if currentTrack then
        currentTrack:Stop()
    end
end)
